{"version":3,"sources":["utils/FilterParams.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/Input.ts","utils/FilterTodos.ts","index.tsx"],"names":["TodoStatus","TodoList","todos","setIsOpedModal","setSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","onClick","todoId","find","type","TodoFilter","filter","onFilterChange","inputValue","onInputChange","clearInput","value","onChange","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","useEffect","userId","href","email","name","App","setTodos","setFilter","setInputValue","isOpedModal","seachTodo","input","visibleTodos","toLowerCase","includes","trim","search","useMemo","status","todosList","filterTodos","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3a3d2ce.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect?: (todo: Todo | null) => void;\n  setIsOpedModal: (newValue: boolean) => void;\n  isOpedModal: boolean;\n  setSelectedTodo: (newValue: Todo | null) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsOpedModal,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const handleTodoChosen = (todoId:number) => {\n    setIsOpedModal(true);\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => handleTodoChosen(todo.id)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { TodoStatus } from '../../utils/FilterParams';\n\ntype Props = {\n  filter: TodoStatus,\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  inputValue: string,\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  clearInput: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  onFilterChange,\n  inputValue,\n  onInputChange,\n  clearInput,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={onFilterChange}\n          >\n            <option value={TodoStatus.All}>\n              All\n            </option>\n            <option value={TodoStatus.Active}>\n              Active\n            </option>\n            <option value={TodoStatus.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={inputValue}\n          onChange={onInputChange}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue && (\n            <button\n              aria-label=\"button delete\"\n              onClick={clearInput}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  setIsOpedModal: (newValue: boolean) => void;\n  selectedTodo: Todo | null;\n  setSelectedTodo: (newValue: Todo | null) => void;\n\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setIsOpedModal,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId || 0).then(setSelectedUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n            <button\n              aria-label=\"button delete\"\n              onClick={() => {\n                setIsOpedModal(false);\n                setSelectedTodo(null);\n              }}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoStatus } from './utils/FilterParams';\nimport { filterTodos } from './utils/FilterTodos';\nimport { search } from './utils/Input';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(TodoStatus.All);\n  const [inputValue, setInputValue] = useState('');\n  const [isOpedModal, setIsOpedModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  // const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as TodoStatus);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n  };\n\n  const visibleTodos = useMemo(() => filterTodos(filter, todos), [filter, todos]);\n\n  const seachTodo = search(inputValue, visibleTodos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={handleFilterChange}\n                filter={filter}\n                inputValue={inputValue}\n                onInputChange={handleInputChange}\n                clearInput={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={seachTodo}\n                    setIsOpedModal={setIsOpedModal}\n                    isOpedModal={isOpedModal}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isOpedModal && (\n        <TodoModal\n          setIsOpedModal={setIsOpedModal}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function search(input: string, visibleTodos: Todo[]) {\n  if (input === '') {\n    return visibleTodos;\n  }\n\n  return visibleTodos.filter(todo => todo.title.toLowerCase()\n    .includes(input.toLowerCase().trim()));\n}\n","import { Todo } from '../types/Todo';\nimport { TodoStatus } from './FilterParams';\n\nexport function filterTodos(status: TodoStatus, todosList: Todo[]) {\n  switch (status) {\n    case TodoStatus.Active:\n      return todosList.filter(todo => !todo.completed);\n    case TodoStatus.Completed:\n      return todosList.filter(todo => todo.completed);\n    default:\n      return todosList;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}